{"version":3,"sources":["logo.svg","pages/home.js","pages/quarantinedetail.js","pages/quarentineInfo.js","pages/timeline.js","pages/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","addDays","Date","startDate","setStartDate","departure","setDeparture","destination","setDestination","localStorage","getItem","className","id","name","onChange","dep","target","value","handleDeparture","disabled","selected","des","handleDestination","minDate","date","handleChangeDate","onClick","console","log","getMonth","getDate","setItem","to","class","QuarantineDetail","props","render","state","recipedata","ingredientLines","href","this","location","setState","React","Component","AboutNav","activeClassName","QuarantineInfo","path","component","Timeline","lcDate","lcMonth","lcDep","lcDes","computeDate","m","d","parseInt","Todo","type","for","App","exact","Testing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a75eafb6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component, useState} from 'react'\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom'\nimport './home.css' \nimport DatePicker from \"react-datepicker\";\nimport { addDays } from 'date-fns';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction Home() {\n\n    const [startDate, setStartDate] = useState(addDays(new Date(), 30));\n    const [departure, setDeparture] = useState('Seattle');\n    const [destination, setDestination] = useState('Shanghai');\n    const [infoValue, setInfoValue] = useState('');\n    // const [lcStorage, setLcStorage] = useState(localStorage.getItem('infoLocalStorage') || '');\n\n    const [lcDate, setLcDate] = useState(localStorage.getItem('localDate') || '');\n\n    const [lcMonth, setLcMonth] = useState(localStorage.getItem('localMonth') || '');\n\n    const [lcDep, setLcDep] = useState(localStorage.getItem('localDep') || '');\n\n    const [lcDes, setLcDec] = useState(localStorage.getItem('localDes') || '');\n\n    const [lcRawDate, setlcRawDate] = useState(localStorage.getItem('localRawDate') || new Date());\n\n\n    const handleChangeDate = date => {\n        setStartDate(date)\n        // console.log(date.getMonth());\n        // console.log(date.getDate());\n        // let info = date.getMonth() + \"/\" + date.getDate() + \" \" + departure + \" \" + destination\n        // setInfoValue(info)\n    };\n\n    const handleDeparture = dep => {\n        // console.log(dep.target.value);\n        setDeparture(dep.target.value);\n        // let info = startDate.getMonth() + \"/\" + startDate.getDate() + \" \" + dep + \" \" + destination\n        // setInfoValue(info)\n    }\n\n    const handleDestination = des => {\n        // console.log(des.target.value);\n        setDestination(des.target.value);\n        // let info = startDate.getMonth() + \"/\" + startDate.getDate() + \" \" + departure + \" \" + des\n        // setInfoValue(info)\n    }\n\n    const handleSaveInfo = () => {\n        console.log(startDate.getMonth() + 1 + \"/\" + startDate.getDate() + \" \" + departure + \" \" + destination);\n        // let localDate = startDate.getMonth() + 1 + \"/\" + startDate.getDate();\n        localStorage.setItem('localMonth', startDate.getMonth() + 1)\n        localStorage.setItem('localDate', startDate.getDate());\n        localStorage.setItem('localRawDate', startDate);\n        localStorage.setItem('localDep', departure);\n        localStorage.setItem('localDes', destination);\n    }\n\n\n    return(\n        <div className=\"home\">\n            <h1>Wanna return back to China? <br></br> We are here to help.</h1>\n            <table>\n                <tr>\n                    <th className=\"form-group\">\n                        {/* <label className=\"departure-logo\" for=\"departure\"><img src=\"../res/departure.png\" alt=\"departure-logo\"></img></label> */}\n                        <div className=\"departure-logo\"></div>\n                        <select id=\"departure\" name=\"departure\" onChange = {dep => handleDeparture(dep)}>\n                            <option value=\"\" disabled selected>Departure Location</option>\n                            <option value=\"Seattle\">Seattle</option>\n                            <option value=\"Los Angeles\">Los Angeles</option>\n                            <option value=\"New York\">New York</option>\n                            <option value=\"Detroit\">Detroit</option>\n                        </select>\n                    </th>\n                    <th className=\"form-group\">\n                        <div className=\"destination-logo\"></div>\n                        <select id=\"destination\" name=\"destination\" onChange = {des => handleDestination(des)}>\n                            <option value=\"\" disabled selected>Destination</option>\n                            <option value=\"Shanghai\">Shanghai</option>\n                            <option value=\"Beijing\">Beijing</option>\n                            <option value=\"Guangzhou\">Guangzhou</option>\n                            <option value=\"Shenzhen\">Shenzhen</option>\n                            <option value=\"Shenyang\">Shenyang</option>\n                        </select>\n                    </th>\n                    <th className=\"form-group\">\n                        <div className=\"calendar-logo\"></div>\n                        {/* <DatePicker selected={startDate} minDate={new Date()} onChange={date => setStartDate(date)} onSelect={date => handleChangeDate(date)}/> */}\n                        <DatePicker selected={startDate} minDate={addDays(new Date(), 30)} onChange={date => handleChangeDate(date)}/>\n                    </th>\n                    <th className=\"submit\">\n                        <button onClick={handleSaveInfo()}><NavLink to=\"/timeline\" class=\"activeLink\">Make a plan</NavLink></button>\n                        {/* <button><NavLink to=\"/timeline\" class=\"activeLink\">Make a plan</NavLink></button> */}\n\n                    </th>\n                    {/* <th>\n                        <input value={Date.parse(lcRawDate)} type=\"text\"/>\n                    </th> */}\n                </tr>\n            </table>\n        </div>\n    )\n}\n\nexport {Home}","import React, { Component }  from 'react'\nimport './quarantineInfo.css';\n\nclass QuarantineDetail extends React.Component {\n    constructor (props) {\n      super(props)\n  \n      this.state = {\n        recipedata: ''\n      }\n    }\n  \n    componentDidMount () {\n      var recipe = this.props.location.state\n  \n      this.setState({\n        \n      })\n    }\n  \n      render = () => {\n        var ingredients = this.state.recipedata.ingredientLines\n        //  console.log('ingredients', typeof (ingredients))\n  \n        return (\n          <div>\n                <div className=\"title-text\">\n                  <h1>Quarantine Policy</h1>  \n                  <h2>Latest Update : 16:00 GMT+8, 13 MAY 2021</h2>\n                </div>\n                <div class=\"row\">\n                  <div class=\"column\">\n                    <h2>Requirement</h2>\n                    <ul>\n                      <li>Get a special one-time entry visa from an overseas Chinese Consulate.</li>\n                      <li>Submit a health declaration prior to departure and have the QR code handy – through email/print out/cell phone (which functions in China).</li>\n                      <li>Complete nucleic acid testing (NAT) within 48 days before boarding. Testing should be carried out in institutions designated or approved by Chinese embassies abroad (if already defined).</li>\n                      \n                    </ul>\n                    <h2>Arrival</h2>\n                    <ul>\n                      <li>On landing you may need to wait on the aircraft for up to 1-2 hours while the passengers are disembarked in groups, either by name or by seat location.</li>\n                      <li>Getting through the airport procedures may also take 3-4 hours; expect: queues, showing your health declaration QR code, temperature checks, form-filling and QR code scanning. A COVID test (NAT) will be taken from each traveler and sent for testing.</li>\n                      <li>Have all your documents ready and prepare to fill in multiple forms and declarations for each person. Keep your boarding passes: you will need proof of flights and seat numbers in coming days.</li>\n                      <li>Apply for home/central quarantine at the last “transportation” station.</li>\n                      <li>You will then go to wait for a special bus to transfer you to your assigned hotel where you will wait for your test results. The transit to that location may take a long time, anything up to 5 hours has been reported.</li>\n                      \n                    </ul>\n                  </div>\n                  \n                  <div class=\"column\">\n                    <h2>Special Cases</h2>\n                    <ul>\n                      <li>Quarantine policies are assigned to different groups of people:\nGROUP 1: Inbound travelers can complete 7 of their 14 days of quarantine at home. Traveler must request 7+7 quarantine at the airport. The first 7 days must still be done at designated observation hotel site and the remaining 7 days at home, as long as the individual’s home/apartment has individual entrance and individual AC.\nGROUP 2: Travelers meeting the following 3 conditions can apply for home quarantine in PVG upon arrival:\na) Traveling with children under 16 years old, medical letter, or other (APPENDIX 3);\nb) Travelers have qualified home conditions;\nc) Travelers have negative COVID test results after arrival to PVG;\nGROUP 3: Travelers with residences without individual entrance or individual AC must stay 14 days at a quarantine hotel.\nIf your test result is positive, or if you develop symptoms during your quarantine, you will be transferred to a COVID-19 specialist hospital unit.</li>\n                      \n                    </ul>\n                    <h2>After Quarantine</h2>\n                    <ul>\n                      <li>If you do not develop any COVID-19 symptoms during your quarantine period, when the 14 days are finished, you will receive a release certificate. You may be subject to complete a final NAT before your release certificate is issued.</li>\n                      <li> For those arriving after July 27, 2020 and under the new 7 days at hotel plus 7 days at home quarantine, a final NAT test is required before release.</li>\n                      <li>For those staying at the central quarantine hotel, upon completion of the 14 days period, you can then arrange your transportation and go home.</li>\n                      <li>Once you have your release certificate, you should download the Shanghai Health QR Code which will enable you to move freely around the city.</li>\n                      \n                    </ul>\n                  </div>\n                  <h3><a href=\"https://www.china-airlines.com/nz/en/discover/news/travel-advisory/Immigration-Information\">Source: China’s Entry Restrictions and Quarantine Requirements</a></h3>\n                </div>\n          </div>\n        )\n      }\n  }\n  \nexport default QuarantineDetail;","import React, { Component }  from 'react'\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom'\nimport  QuarantineDetail from './quarantinedetail';\nimport './quarantineInfo.css';\nclass QuarantineInfo extends React.Component {\n    constructor (props) {\n      super(props)\n  \n      this.state = {\n        recipedata: ''\n      }\n    }\n  \n    componentDidMount () {\n      var recipe = this.props.location.state\n  \n      this.setState({\n        \n      })\n    }\n  \n      render = () => {\n        var ingredients = this.state.recipedata.ingredientLines\n        //  console.log('ingredients', typeof (ingredients))\n  \n        return (\n          \n          <div>\n                <h1>Qurantine</h1>\n                <div class=\"row\">\n                  <div class=\"column\">\n                    <h2>Destination Airport to Quarantine Hotel</h2>\n                    <h2>Hotel Quarantine Guidelines</h2>\n                    <ul>\n                      <li>Food will be delivered at door at 8AM, 12PM and 6PM during the quarantine.</li>\n                      <li>You are required to report body temperature 1 hour after each meal.</li>\n                      <li>No take-out food is allowed</li>\n                      <li>You are required to stay in the room all the time expect pick up food at door.</li>\n                    </ul>\n                  </div>\n                  \n                  <div class=\"column\">\n                    <h2>Quarantine Policy</h2>\n                    <ul>\n                      <li>Upon arrival, passengers need to show health declaration QR code, temperature checks, form-filling and QR code scanning. A COVID test (NAT) will be taken from each traveler and sent for testing.</li>\n                      <li>Passengers need to have all documents ready and prepare to fill in multiple forms and declarations for each person. </li>\n                      <li>A special bus to transfer passengers to your assigned hotel for quarantine.</li>\n                      <li>Quarantine policy may vary based on passengers’ situations. (More details in Quarantine policy page).</li>\n                      <li>\n                        <Route path=\"/quarantinedetail\" component={QuarantineDetail}>Quarantine policy in details.</Route>\n                        <AboutNav />\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                \n          </div>\n        )\n      }\n  }\n\n  function AboutNav() {\n    return (\n      <nav>\n        <ul>\n          <li><NavLink to=\"/quarantinedetail\" activeClassName=\"activeLink\">Quarantine policy in details.</NavLink></li>\n        </ul>\n      </nav>\n    );\n  }\n  \n  export default QuarantineInfo;","import React, {Component, useState} from 'react'\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom'\nimport './timeline.css' \nimport Quarantine from './quarentineInfo'\n// export class Timeline extends Component {\n\nfunction Timeline() {\n\n    const [lcDate, setLcDate] = useState(localStorage.getItem('localDate') || '');\n\n    const [lcMonth, setLcMonth] = useState(localStorage.getItem('localMonth') || '');\n\n    const [lcDep, setLcDep] = useState(localStorage.getItem('localDep') || '');\n\n    const [lcDes, setLcDec] = useState(localStorage.getItem('localDes') || '');\n\n    const [lcRawDate, setlcRawDate] = useState(localStorage.getItem('localRawDate') || new Date());\n\n    const computeDate = (m, d) => {\n        if (m === 4 || m === 6 || m === 9 || m === 11) {\n            if (d > 0) {\n                return m + \"/\" + d;\n            } else {\n                let newM = m - 1;\n                let newD = 31 + d;\n                return newM + \"/\" + newD;\n            }\n        } else if (m === 2) {\n            if (d > 0) {\n                return m + \"/\" + d;\n            } else {\n                let newM = m - 1;\n                let newD = d + 28;\n                return newM + \"/\" + newD;\n            }\n        } else {\n            if (d > 0) {\n                return m + \"/\" + d;\n            } else {\n                let newM = m - 1;\n                let newD = d + 30;\n                return newM + \"/\" + newD;\n            }\n        }\n    } \n\n\n    return (\n        <div className=\"timeline\">\n            <div className=\"travelInfo\">\n                <h3>Trip To: <span className=\"location\">{lcDep}</span></h3> \n                <h3>Departure From: <span className=\"location\">{lcDes}</span></h3> \n            </div>\n            <div className=\"title-n-option\">\n                <h1 className=\"title\">Timeline</h1>\n                <h3><NavLink to=\"/todo\" class=\"activeLink\">Change to Travel Mode</NavLink></h3>\n            </div>\n\n            <div className=\"timeline-body\">\n                <div className=\"time-stamp\">\n                </div>\n                <div className=\"timelineDetail\">\n                    <div className=\"prep\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day1 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) - 30)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <h3>Preparation</h3>\n                        </div>\n                        <ol className=\"actions\">\n                            <li>- Report personal health status on WeChat mini app continuously for 14 days.</li>\n                        </ol>\n                    </div>\n\n                    <div className=\"test\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day13 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) - 18)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <h3>Preparation</h3>\n                        </div>\n                        <ol className=\"actions\">\n                            <li>- Select testing facility to make appointment nucleic acid and IgM anti-body test.</li>\n                            <li>- Take Nucleic acid and IgM anti-body tests.</li>\n                            <li>- Go the testing location with a valid ID and insurance card/voucher.</li>\n                            <li>- <a href=\"https://hr.cs.mfa.gov.cn/help_two/help-two/\" target=\"_blank\">Apply for green health code from the Chinese embassy.</a></li>\n                        </ol>\n                    </div>\n                        \n\n                    <div className=\"flight\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day15 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) - 16)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <h3>Flights</h3>\n                        </div>\n                        <ol className=\"actions\">\n                            <li>- Arrive airport with valid passport, green health code and negative test results.</li>\n                            <li>- <a href=\"http://health.customsapp.com/home/pages/index/index.html\" target=\"_blank\">Fill out the required entry documents before boarding.</a></li>\n                            <li>- Keep masks on all the time through the flight.</li>\n                        </ol>\n                    </div>\n\n                    <div className=\"quar\">\n                        <div className=\"quarantine-date\">\n                            <div className=\"date-box\">\n                                <hr></hr>\n                                <p className=\"date\">Day17 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) - 14)}</p>\n                            </div>\n                            <div className=\"date-box\">\n                                <hr></hr>\n                                <p className=\"date\">Day31 <br></br>{lcMonth}/{lcDate}</p>\n                            </div>\n                        </div>\n                        <div className=\"box\">\n                            <h3>Quarantine</h3>\n                        </div>\n                        <ol className=\"actions\">\n                            <li>- Arrive to China.</li>\n                            <li>- Wait for epidemic prevention personnel to check entry documents.</li>\n                            <li>- Receive Nucleic acid and IgM anti-body tests at airport.</li>\n                            <li>- Assign to groups and wait for quarantine hotel assignment.</li>\n                            <li>- Transport to quarantine hotel.</li>\n                            <li>- <NavLink to=\"/quarantinedetail\" class=\"activeLink\">Quarantine policy and Hotel quarantine roles.</NavLink></li>\n                            <li>- Arrive at quarantine hotel.</li>\n                            <li>- Report entry information to community staff and local police station.</li>\n                            <li>- Take Nucleic acid test at the 12th day of quarantine.</li>\n                            <li>- Receive negative testing resolt of nucleic acid test.</li>\n                            <li>- Check-out.</li>\n                        </ol>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"timeline-body-mobile\">\n                <div className=\"timelineDetail\">\n                    <div className=\"prep\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day1 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) - 30)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <ol className=\"actions\">\n                                <li>- Report personal health status on WeChat mini app continuously for 14 days.</li>\n                            </ol>\n                        </div>\n                    </div>\n\n                    <div className=\"test\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day13 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) - 18)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <ol className=\"actions\">\n                                <li>- Select testing facility to make appointment nucleic acid and IgM anti-body test.</li>\n                                <li>- Take Nucleic acid and IgM anti-body tests.</li>\n                                <li>- Go the testing location with a valid ID and insurance card/voucher.</li>\n                                <li>- <a href=\"https://hr.cs.mfa.gov.cn/help_two/help-two/\" target=\"_blank\">Apply for green health code from the Chinese embassy.</a></li>\n                            </ol>\n                        </div>\n\n                    </div>\n                        \n\n                    <div className=\"flight\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day15 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) - 16)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <ol className=\"actions\">\n                                <li>- Arrive airport with valid passport, green health code and negative test results.</li>\n                                <li>- <a href=\"http://health.customsapp.com/home/pages/index/index.html\" target=\"_blank\">Fill out the required entry documents before boarding.</a></li>\n                                <li>- Keep masks on all the time through the flight.</li>\n                            </ol>\n                        </div>\n\n                    </div>\n\n                    <div className=\"quar\">\n                        <div className=\"quarantine-date\">\n                            <div className=\"date-box\">\n                                <hr></hr>\n                                <p className=\"date\">Day17 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) - 14)}</p>\n                            </div>\n                            <div className=\"date-box\">\n                                <hr></hr>\n                                <p className=\"date\">Day31 <br></br>{lcMonth}/{lcDate}</p>\n                            </div>\n                        </div>\n                        <div className=\"box\">\n                            <ol className=\"actions\">\n                                <li>- Arrive to China.</li>\n                                <li>- Wait for epidemic prevention personnel to check entry documents.</li>\n                                <li>- Receive Nucleic acid and IgM anti-body tests at airport.</li>\n                                <li>- Assign to groups and wait for quarantine hotel assignment.</li>\n                                <li>- Transport to quarantine hotel.</li>\n                                <li>- <NavLink to=\"/quarantinedetail\" class=\"activeLink\">Quarantine policy and Hotel quarantine roles.</NavLink></li>\n                                <li>- Arrive at quarantine hotel.</li>\n                                <li>- Report entry information to community staff and local police station.</li>\n                                <li>- Take Nucleic acid test at the 12th day of quarantine.</li>\n                                <li>- Receive negative testing resolt of nucleic acid test.</li>\n                                <li>- Check-out.</li>\n                            </ol>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport {Timeline};","import React, {Component, useState} from 'react'\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom'\nimport './timeline.css' \nimport Quarantine from './quarentineInfo'\nimport { Timeline } from './timeline'\n\nfunction Todo() {\n\n    const [lcDate, setLcDate] = useState(localStorage.getItem('localDate') || '');\n\n    const [lcMonth, setLcMonth] = useState(localStorage.getItem('localMonth') || '');\n\n    const [lcDep, setLcDep] = useState(localStorage.getItem('localDep') || '');\n\n    const [lcDes, setLcDec] = useState(localStorage.getItem('localDes') || '');\n\n    const [lcRawDate, setlcRawDate] = useState(localStorage.getItem('localRawDate') || new Date());\n\n    const computeDate = (m, d) => {\n        if (m === 1 || m === 3 || m === 5 || m === 7 || m === 8 || m === 10 || m === 12) {\n            if (d <= 31) {\n                return m + \"/\" + d;\n            } else {\n                let newM = m + 1;\n                let newD = d - 31;\n                return newM + \"/\" + newD;\n            }\n        } else if (m === 2) {\n            if (d <= 28) {\n                return m + \"/\" + d;\n            } else {\n                let newM = m + 1;\n                let newD = d - 28;\n                return newM + \"/\" + newD;\n            }\n        } else {\n            if (d <= 30) {\n                return m + \"/\" + d;\n            } else {\n                let newM = m + 1;\n                let newD = d - 30;\n                return newM + \"/\" + newD;\n            }\n        }\n    } \n    return (\n        <div className=\"timeline\">\n            <div className=\"travelInfo\">\n                <h3>Trip To: <span className=\"location\">{lcDep}</span></h3> \n                <h3>Departure From: <span className=\"location\">{lcDes}</span></h3> \n            </div>\n            <div className=\"title-n-option\">\n                <h1 className=\"title\">To-do List</h1>\n                {/* <h3><a href=\"timeline\">Change to Planning Mode</a></h3> */}\n                <h3><NavLink to=\"/timeline\" class=\"activeLink\">Change to Planning Mode</NavLink></h3>\n            </div>\n            <div className=\"timeline-body\">\n                <div className=\"time-stamp\">\n                </div>\n                <div className=\"timelineDetail\">\n                    <div className=\"prep\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day1 <br></br>{lcMonth}/{lcDate}</p>\n                        </div>\n                        <div className=\"box\">\n                            <h3>Preparation</h3>\n                        </div>\n                        <ol className=\"todo-items\">\n                            <li>\n                                <input type=\"checkbox\" id=\"1\"></input>\n                                <label for=\"1\">Report personal health status on WeChat mini app .</label>\n                            </li>\n                        </ol>\n                        \n                    </div>\n\n                    <div className=\"test\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day13 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) + 12)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <h3>Testing</h3>\n                        </div>\n                        <ol className=\"todo-items\">\n                            <li>\n                                <input type=\"checkbox\" id=\"2\"></input>\n                                <label for=\"2\">Make appointment.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"3\"></input>\n                                <label for=\"3\">Take Nucleic acid and IgM anti-body tests.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"4\"></input>\n                                <label for=\"4\">Fetch testing results.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"5\"></input>\n                                <label for=\"5\">Submit testing results; apply for green health code from Chinese Embassy.</label>\n                            </li>\n                        </ol>\n                    </div>\n                        \n\n                    <div className=\"flight\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day15 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) + 14)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <h3>Flights</h3>\n                        </div>\n                        <ol className=\"todo-items\">\n                            <li>\n                                <input type=\"checkbox\" id=\"6\"></input>\n                                <label for=\"6\">Arrive to airport.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"7\"></input>\n                                <label for=\"7\">Check body temperature.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"8\"></input>\n                                <label for=\"8\">Fill out required documents before boarding.</label>\n                            </li>\n                        </ol>\n                    </div>\n                        \n\n\n                    <div className=\"quar\">\n                        <div className=\"quarantine-date\">\n                            <div className=\"date-box\">\n                                <hr></hr>\n                                <p className=\"date\">Day17 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) + 16)}</p>\n                            </div>\n                            <div className=\"date-box\">\n                                <hr></hr>\n                                <p className=\"date\">Day31 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) + 30)}</p>\n                            </div>\n                        </div>\n                        <div className=\"box\">\n                            <h3>Quarantine</h3>\n                        </div>\n                        <ol className=\"todo-items\">\n                            <li>\n                                <input type=\"checkbox\" id=\"9\"></input>\n                                <label for=\"9\">Arrive to China.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"10\"></input>\n                                <label for=\"10\">Entry document and health document check.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"11\"></input>\n                                <label for=\"11\">Take Nucleic acid and IgM anti-body tests at airport.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"12\"></input>\n                                <label for=\"12\">Claim luggage.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"13\"></input>\n                                <label for=\"13\">Assigned to passenger group.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"14\"></input>\n                                <label for=\"14\">Assigned to quarantine hotel.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"15\"></input>\n                                <label for=\"15\">Arrive to quarantine hotel.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"16\"></input>\n                                <label for=\"16\">Report entry informaiont and status to community staff .</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"17\"></input>\n                                <label for=\"17\">Take nucleic acid test at 12th day of quarantine.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"18\"></input>\n                                <label for=\"18\">Receive nucleic acid test result.</label>\n                            </li>\n                            <li>\n                                <input type=\"checkbox\" id=\"19\"></input>\n                                <label for=\"19\">Check-out.</label>\n                            </li>\n                        </ol>\n                    </div>\n\n                </div>\n            </div>\n\n\n\n            <div className=\"timeline-body-mobile\">\n                <div className=\"timelineDetail\">\n                    <div className=\"prep\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day1 <br></br>{lcMonth}/{lcDate}</p>\n                        </div>\n                        <div className=\"box\">\n                            <ol className=\"todo-items\">\n                                <li>\n                                    <input type=\"checkbox\" id=\"1\"></input>\n                                    <label for=\"1\">Report personal health status on WeChat mini app.</label>\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n\n                    <div className=\"test\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day13 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) + 12)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <ol className=\"todo-items\">\n                                <li>\n                                    <input type=\"checkbox\" id=\"2\"></input>\n                                    <label for=\"2\">Make appointment.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"3\"></input>\n                                    <label for=\"3\">Take Nucleic acid and IgM anti-body tests.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"4\"></input>\n                                    <label for=\"4\">Fetch testing results.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"5\"></input>\n                                    <label for=\"5\">Submit testing results; apply for green health code from Chinese Embassy.</label>\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                        \n\n                    <div className=\"flight\">\n                        <div className=\"date-box\">\n                            <hr></hr>\n                            <p className=\"date\">Day15 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) + 14)}</p>\n                        </div>\n                        <div className=\"box\">\n                            <ol className=\"todo-items\">\n                                <li>\n                                    <input type=\"checkbox\" id=\"6\"></input>\n                                    <label for=\"6\">Arrive to airport.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"7\"></input>\n                                    <label for=\"7\">Check body temperature.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"8\"></input>\n                                    <label for=\"8\">Fill out required documents before boarding.</label>\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                        \n\n\n                    <div className=\"quar\">\n                        <div className=\"quarantine-date\">\n                            <div className=\"date-box\">\n                                <hr></hr>\n                                <p className=\"date\">Day17 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) + 16)}</p>\n                            </div>\n                            <div className=\"date-box\">\n                                <hr></hr>\n                                <p className=\"date\">Day31 <br></br>{computeDate(parseInt(lcMonth), parseInt(lcDate) + 30)}</p>\n                            </div>\n                        </div>\n                        <div className=\"box\">\n                            <ol className=\"todo-items\">\n                                <li>\n                                    <input type=\"checkbox\" id=\"9\"></input>\n                                    <label for=\"9\">Arrive to China.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"10\"></input>\n                                    <label for=\"10\">Entry document and health document check.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"11\"></input>\n                                    <label for=\"11\">Take Nucleic acid and IgM anti-body tests at airport.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"12\"></input>\n                                    <label for=\"12\">Claim luggage.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"13\"></input>\n                                    <label for=\"13\">Assigned to passenger group.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"14\"></input>\n                                    <label for=\"14\">Assigned to quarantine hotel.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"15\"></input>\n                                    <label for=\"15\">Arrive to quarantine hotel.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"16\"></input>\n                                    <label for=\"16\">Report entry informaiont and status to community staff .</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"17\"></input>\n                                    <label for=\"17\">Take nucleic acid test at 12th day of quarantine.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"18\"></input>\n                                    <label for=\"18\">Receive nucleic acid test result.</label>\n                                </li>\n                                <li>\n                                    <input type=\"checkbox\" id=\"19\"></input>\n                                    <label for=\"19\">Check-out.</label>\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport {Todo};","import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport { Route, NavLink, Switch, Redirect, HashHistory } from 'react-router-dom'\nimport { Home } from './pages/home';\nimport { Timeline } from './pages/timeline';\nimport { Todo } from './pages/todo';\nimport { Testing } from './pages/testing';\nimport QuarantineInfo from './pages/quarentineInfo';\nimport './App.css';\nimport QuarantineDetail from './pages/quarantinedetail';\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n    <div>    \n    { /* header section */} \n    <header className=\"py-5\">\n        <AboutNav />\n    </header>\n    \n    { /* main section */}\n    <main>\n        <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route path=\"/timeline\" component={Timeline}></Route>\n        <Route path=\"/todo\" component={Todo}></Route>\n        <Route path=\"/testing\" component={Testing}></Route>\n        <Route path=\"/quarantine\" component={QuarantineInfo}></Route>\n        <Route path=\"/quarantinedetail\" component={QuarantineDetail}></Route>\n        {/* <Redirect to=\"/\" /> */}\n        </Switch>\n    </main>\n\n    { /* footer section */}\n    <footer>\n        <p>This app is created by UW students from INFO 491.</p>\n        <p>&copy; Travel Saver. By Wayne, Chris, Han, and Harry</p>\n                                <address>\n                                    Report Inapporiate Content: <a href=\"report@fs.com\">report@TravelSaver.com</a>, or at <a href=\"tel:800-888-888\">(800) 888-888</a>.\n                                </address>\n    </footer>\n</div>\n  );\n}\n\n// create navigation bar\nfunction AboutNav() {\n  return (\n    <nav>\n      <h1 className=\"logo\"><NavLink to=\"/\" class=\"activeLink\">TravelSaver</NavLink></h1>\n      <ul>\n        <li className=\"container container/1\"><NavLink to=\"/timeline\" class=\"activeLink\">Planner</NavLink></li>\n        <li className=\"container container2\"><NavLink to=\"/quarantinedetail\" class=\"activeLink\">Information Update (Live)</NavLink></li>\n        {/* <li class=\"container container3\"><NavLink to=\"/testing\" class=\"activeLink\">Testing</NavLink></li>\n        <li class=\"container container4\"><NavLink to=\"/todo\" class=\"activeLink\">To-Do List Before Trip</NavLink></li> */}\n      </ul>\n    </nav>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n// import firebase from 'firebase/app';\n// import 'firebase/auth';\n// import 'firebase/database';\n\n\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyBuaezDzBSMl-GnTni1Dmxg6TCDW4VZcYc\",\n//   authDomain: \"travelsaver-a9449.firebaseapp.com\",\n//   projectId: \"travelsaver-a9449\",\n//   storageBucket: \"travelsaver-a9449.appspot.com\",\n//   messagingSenderId: \"139452715123\",\n//   appId: \"1:139452715123:web:b9c0e62a4e1afa27fe9a06\"\n// };\n// // Initialize Firebase\n// firebase.initializeApp(firebaseConfig)\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}